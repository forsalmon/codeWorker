<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.IApplicantMgmtMapper">

<resultMap type="applyVO" id="applyResultMap">
	<result property="rnum" column="rnum" />
	<result property="applyNo" column="apply_no" />
	<result property="memId" column="mem_id" />
	<result property="resumeNo" column="resume_no" />
	<result property="applyDate" column="apply_date" />
	<result property="recNtcId" column="rec_ntc_id" />
	<association property="seekerVO" javaType="kr.or.ddit.vo.SeekerVO">
		<result property="seekerName" column="seeker_name"></result>
	</association>
	<association property="educationVO" javaType="kr.or.ddit.vo.EducationVO">
		<result property="eduName" column="edu_name"></result>
		<result property="eduMajor" column="edu_major"></result>
	</association>
	<association property="applyProcessResultVO" javaType="kr.or.ddit.vo.ApplicantProcessResultVO">
		<result property="applicantStatusCode" column="applicant_status_code"></result>
	</association>
</resultMap>

<select id="selectApplyList" parameterType="pagingVO" resultMap="applyResultMap">
	select
	    b.*
	from(
	    select
	        a.*, row_number() over(order by a.rec_ntc_id desc) rnum 
	    from(
	    select 
	        ap.apply_no, ap.mem_id, ap.resume_no, to_char(ap.apply_date, 'YYYY-MM-DD') as apply_date
	        , rn.rec_ntc_id
	        , (select seeker_name from seeker s where ap.mem_id = s.mem_id) as seeker_name
	        , e.edu_name, e.edu_major
	        , apr.applicant_status_code
	    from apply ap left outer join recruitment_notice rn on(ap.rec_ntc_id = rn.rec_ntc_id)
	                  left outer join applicant_process_result apr on(ap.apply_no = apr.apply_no)
	                  left outer join education e on(e.mem_id = ap.mem_id)
	              where rn.crp_id = (select r.crp_id from recruiter r where r.mem_id = #{memId})  
	              <if test="recNtcId != null and !recNtcId.equals('')">
	              and rn.rec_ntc_id = #{recNtcId}
	              </if>
	              <if test="applicantStatusCode != null and applicantStatusCode !=''">
	              and apr.applicant_status_code = #{applicantStatusCode}
	              </if>
	              order by apply_date desc
	    )a    
	) b
	<![CDATA[
	where b.rnum >= #{startRow} and b.rnum <= #{endRow}	
	]]>
</select>

<select id="selectApplyCount" parameterType="pagingVO" resultType="int">
  	select count(apply_no)
	from apply
</select>

<select id="getRecNtcList" parameterType="String" resultType="recruitmentNoticeVO">
	select 
		rec_ntc_id
		, rec_ntc_title
		, to_char(rec_ntc_start, 'YYYY-MM-DD') as rec_ntc_start
		, to_char(rec_ntc_end, 'YYYY-MM-DD') as rec_ntc_end
	from recruitment_notice
	where crp_id = #{cropId}
	order by rec_ntc_start desc
</select>

<!-- 이거 나중에 지워야할지도... -->
<select id="getResumeByNo" parameterType="int" resultType="resumeVO">
	select 
		resume_no, mem_id, resume_name, resume_profile_url, 
		resume_introduction, resume_reg_date, resume_upd_date 
	from resume
	where resume_no = #{resumeNo}
</select>

<resultMap type="resumeVO" id="resumeResultMap">
	<result property="resumeNo" column="resume_no"/>
	<result property="resumeName" column="resume_name"/>
	<result property="memId" column="mem_id"/>
	<result property="eduType" column="eduType"/>
	<result property="resumeProfileUrl" column="resume_profile_url"/>
	<association property="seekerVO" javaType="kr.or.ddit.vo.SeekerVO">
		<result property="seekerName" column="seeker_name"/>
		<result property="seekerBirth" column="seeker_birth"/>
		<result property="seekerTel" column="seeker_tel"/>
		<result property="seekerEmail" column="seeker_email"/>
	</association>
	<association property="educationVO" javaType="kr.or.ddit.vo.EducationVO">
		<result property="eduGraduatedYn" column="edu_graduated_yn"/>
		<result property="eduGraduatedDate" column="edu_graduated_date"/>
		<result property="eduTypeCode" column="edu_type_code"/>
		<result property="eduName" column="edu_name"/>
		<result property="eduMajor" column="edu_major"/>
	</association>
</resultMap>

<select id="basicResume" parameterType="int" resultMap="resumeResultMap">
	select 
	    r.resume_no
	    , r.resume_name
	    , r.mem_id
	    , r.resume_profile_url
	    , s.seeker_name
	    , s.seeker_birth
	    , s.seeker_tel
	    , s.seeker_email
	    , e.edu_graduated_yn
	    , e.edu_graduated_date
	    , (select detail_code_name
	         from detail_code
	        where detailcode = e.edu_type_code) as "eduType"
	    , e.edu_name
	    , e.edu_major
	from resume r
	inner join seeker s on r.mem_id = s.mem_id
	inner join education e on s.mem_id = e.mem_id
	where r.resume_no = #{resumeNo}
</select>

<select id="certificationForResume" parameterType="int" resultType="certificationVO">
	select 
		cert_no
		, resume_no
		, cert_name
		, cert_serial_num
		, cert_date
		, cert_institution
	from certification
	where resume_no = #{resumeNo}
</select>

<select id="skillForResume" parameterType="int" resultType="resumeSkillVO">
	select 
	    (select detail_code_name from detail_code where detailcode = skillstack_code) as "skillstackName"
	    , resume_no
	from resume_skill
	where resume_no = #{resumeNo}
</select>

<select id="careerForResume" parameterType="int" resultType="resumeCareerVO">
	select 
		res_career_no
		, resume_no
		, res_career_name
		, res_career_dept
		, res_career_position
		, res_career_content
		, res_career_type
		, res_career_join_date
		, res_career_out_date
	from resume_career
	where resume_no = #{resumeNo}
</select>

<resultMap type="AnswerSelfIntroVO" id="AnswerSelfIntroResultMap">
	<result property="selfIntroNo" column="self_intro_no" />
	<result property="ansIntroContent" column="ans_intro_content" />
	<association property="recruitmentSelfIntroVO" javaType="kr.or.ddit.vo.RecruitmentSelfIntroVO">
		<result property="selfIntroTitle" column="self_intro_title" />
	</association>
</resultMap>

<select id="selfInfoAnswer" parameterType="int" resultMap="AnswerSelfIntroResultMap">
	select 
		asi.self_intro_no
		, rsi.self_intro_title
		, asi.ans_intro_content
	from recruitment_self_intro rsi
	inner join answer_self_intro asi on rsi.self_intro_no = asi.self_intro_no
	where rsi.rec_ntc_id = (
		    select distinct rec_ntc_id                                 
		    from answer_self_intro asi
		    inner join apply a on asi.apply_no = a.apply_no
		    where a.apply_no = #{applyNo}
	)
</select>


<resultMap type="AnswerCodingTestVO" id="codingTestAnswerResultMap">
	<result property="recCodingTestNo" column="rec_coding_test_no" />
	<result property="ansCoteNo" column="ans_cote_no" />
	<result property="applyNo" column="apply_no" />
	<result property="ansCoteContent" column="ans_cote_content" />
	<association property="codingTestVO" javaType="kr.or.ddit.vo.CodingTestVO">
		<result property="coteNo" column="cote_no" />
		<result property="coteTitle" column="cote_title" />
		<result property="questionContent" column="question_content" />
	</association>

</resultMap>

<select id="codingTestAnswer" parameterType="int" resultMap="codingTestAnswerResultMap">
	select 
	    act.rec_coding_test_no
	    , ct.cote_no
	    , ct.cote_title
	    , ct.question_content
	    , act.ans_cote_no
	    , act.apply_no
	    , act.ans_cote_content
	from answer_coding_test act 
	inner join recruitment_coding_test rct on rct.rec_coding_test_no = act.rec_coding_test_no
	inner join coding_test ct on ct.cote_no = rct.cote_no
	where apply_no = #{applyno}
	order by act.rec_coding_test_no
</select>

<update id="updateApplicantStatus" parameterType="int">
	UPDATE APPLICANT_PROCESS_RESULT
	SET APPLICANT_STATUS_CODE = CASE 
	    WHEN APPLICANT_STATUS_CODE = '' THEN 'APP0101'
	    WHEN APPLICANT_STATUS_CODE = 'APP0101' THEN 'APP0102'
	    WHEN APPLICANT_STATUS_CODE = 'APP0102' THEN 'APP0103'
	    WHEN APPLICANT_STATUS_CODE = 'APP0103' THEN 'APP0104'
	    ELSE APPLICANT_STATUS_CODE
	END
	WHERE APPLY_NO = #{applyNo}
</update>

<update id="updateApplicantNonPass" parameterType="int">
	UPDATE APPLICANT_PROCESS_RESULT
	SET APPLICANT_STATUS_CODE = 'APP0105'
	WHERE APPLY_NO = #{applyNo}
</update>

<select id="getMemId" parameterType="int" resultType="string">
	select mem_id
	from apply
	where apply_no = #{applyNo}
</select>

<insert id="insertAlarm" parameterType="alarmVO" useGeneratedKeys="true">
	<selectKey  keyProperty="alarmNo" resultType="int" order="BEFORE">
		select alarm_no_seq.nextval FROM dual
	</selectKey>
	insert into alarm(
		alarm_no, mem_id, alarm_content, alarm_date, alarm_yn, apply_no, alarm_type
	)values(
		#{alarmNo}, #{memId}, #{alarmContent}, sysdate, 'N', #{applyNo}, #{alarmType}
	)
</insert>

<insert id="insertAlarm2" parameterType="alarmVO" useGeneratedKeys="true">
	<selectKey  keyProperty="alarmNo" resultType="int" order="BEFORE">
		select alarm_no_seq.nextval FROM dual
	</selectKey>
	insert into alarm(
		alarm_no, mem_id, alarm_content, alarm_date, alarm_yn, alarm_type, pro_no
	)values(
		#{alarmNo}, #{memId}, #{alarmContent}, sysdate, 'N',  #{alarmType}, #{proNo}
	)
</insert>

	<select id="getStatus" parameterType="int" resultType="string">
		select applicant_status_code
		from applicant_process_result
		where apply_no = #{applyNo}
	</select>
	
	<select id="getMemId2" parameterType="int" resultType="string">
		select mem_id
		from proposal
		where pro_no = #{proNo}
	</select>
</mapper>